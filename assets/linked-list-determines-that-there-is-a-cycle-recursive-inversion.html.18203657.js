import{b as n}from"./app.9da19d67.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="\u94FE\u8868\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868\u7B97\u6CD5" aria-hidden="true">#</a> \u94FE\u8868\u7B97\u6CD5</h2><p>\u5224\u65AD\u94FE\u8868\u662F\u5426\u6709\u73AF</p><p>\u5B9A\u4E49\u4E00\u4E2A\u4E34\u65F6\u53D8\u91CF\u5F15\u7528\u6307\u5411\u5F53\u524D\u7684\u8282\u70B9</p><p>\u5B9A\u4E49\u4E00\u4E2A hashmap\u3002Key \u4E0E value \u5F53\u65F6\u5F53\u524D\u7684\u8282\u70B9\u3002</p><p>\u8BE5\u8282\u70B9\u5B58\u5728\u4E8E hashmap \u4E2D\uFF0Cnode.get(tmp) \uFF0C\u5219\u786E\u5B9A\u6709\u73AF\uFF0C \u6CA1\u6709\u5C31\u5B58\u653E\u8BE5\u7684\u8282\u70B9\u3002</p><h2 id="\u5355\u94FE\u8868\u53CD\u8F6C" tabindex="-1"><a class="header-anchor" href="#\u5355\u94FE\u8868\u53CD\u8F6C" aria-hidden="true">#</a> \u5355\u94FE\u8868\u53CD\u8F6C</h2><p>\u4ECE\u5F53\u524D\u94FE\u8868\u7684\u9996\u8282\u70B9\u5F00\u59CB\u5FAA\u73AF\u904D\u5386\uFF0C\u4E00\u76F4\u5230\u94FE\u8868\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9\uFF0C\u4F1A\u9010\u4E2A\u6539\u53D8\u6240\u904D\u5386\u7684\u8282\u70B9\u7684\u6307\u9488\u57DF\uFF0C\u53E6\u5176\u6307\u5411\u524D\u4E00\u4E2A\u8282\u70B9\u3002</p><p>\u5177\u4F53\u7684\u5B9E\u73B0\u65B9\u6CD5\u4E5F\u5F88\u7B80\u5355\uFF0C\u501F\u52A9\u4E09\u4E2A\u6307\u9488\u5373\u53EF\u3002\u9996\u5148\u6211\u4EEC\u5B9A\u4E49 3 \u4E2A\u6307\u9488\u5E76\u5206\u522B\u547D\u540D\u4E3A begn\uFF0Cmid\uFF0Cend\u3002\u4ED6\u4EEC\u7684\u521D\u59CB\u6307\u5411\u5982\u56FE 3 \u6240\u793A\uFF1A</p><p><a href="docs/algo/img/1-1.png"></a></p><h2 id="\u9012\u5F52\u53CD\u8F6C" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u53CD\u8F6C" aria-hidden="true">#</a> \u9012\u5F52\u53CD\u8F6C</h2><p>\u94FE\u8868\u7684\u5C3E\u8282\u70B9\u5F00\u59CB\uFF0C\u4F9D\u6B21\u5411\u524D\u904D\u5386\uFF0C\u904D\u5386\u8FC7\u7A0B\u4E00\u6B21\u6539\u53D8\u5404\u8282\u70B9\u7684\u6307\u5411\uFF0C\u5373\u53E6\u5176\u6307\u5411\u524D\u4E00\u4E2A\u8282\u70B9\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
 <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token class-name">Data</span><span class="token punctuation">;</span><span class="token comment">// \u6570\u636E\u57DF</span>
 <span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token class-name">Next</span><span class="token punctuation">;</span><span class="token comment">// \u6307\u9488\u57DF</span>
 <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token class-name">Data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// super();</span>
  <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Data</span> <span class="token operator">=</span> <span class="token class-name">Data</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> javatest1 <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span> node1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span> node2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span> node3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        head<span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>node1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        node1<span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>node2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        node2<span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>node3<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u8C03\u7528\u53CD\u8F6C\u65B9\u6CD5</span>
        head <span class="token operator">=</span> <span class="token class-name">Reverse1</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            head <span class="token operator">=</span> head<span class="token punctuation">.</span><span class="token function">getNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u9012\u5F52\uFF0C\u5728\u53CD\u8F6C\u5F53\u524D\u8282\u70B9\u4E4B\u524D\u5148\u53CD\u8F6C\u540E\u7EED\u8282\u70B9
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Node</span> <span class="token class-name">Reverse1</span><span class="token punctuation">(</span><span class="token class-name">Node</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// head\u770B\u4F5C\u662F\u524D\u4E00\u7ED3\u70B9\uFF0Chead.getNext()\u662F\u5F53\u524D\u7ED3\u70B9\uFF0CreHead\u662F\u53CD\u8F6C\u540E\u65B0\u94FE\u8868\u7684\u5934\u7ED3\u70B9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> head<span class="token punctuation">.</span><span class="token function">getNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> head<span class="token punctuation">;</span><span class="token comment">// \u82E5\u4E3A\u7A7A\u94FE\u6216\u8005\u5F53\u524D\u7ED3\u70B9\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9\u5728\u5C3E\u7ED3\u70B9\uFF0C\u5219\u76F4\u63A5\u8FD8\u56DE</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Node</span> reHead <span class="token operator">=</span> <span class="token class-name">Reverse1</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span><span class="token function">getNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u5148\u53CD\u8F6C\u540E\u7EED\u8282\u70B9head.getNext()</span>
        head<span class="token punctuation">.</span><span class="token function">getNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u5C06\u5F53\u524D\u7ED3\u70B9\u7684\u6307\u9488\u57DF\u6307\u5411\u524D\u4E00\u7ED3\u70B9</span>
        head<span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u524D\u4E00\u7ED3\u70B9\u7684\u6307\u9488\u57DF\u4EE4\u4E3Anull;</span>
        <span class="token keyword">return</span> reHead<span class="token punctuation">;</span><span class="token comment">// \u53CD\u8F6C\u540E\u65B0\u94FE\u8868\u7684\u5934\u7ED3\u70B9</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div>`,13);function e(t,c){return p}var u=s(a,[["render",e],["__file","linked-list-determines-that-there-is-a-cycle-recursive-inversion.html.vue"]]);export{u as default};
