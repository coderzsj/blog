(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{627:function(e,r,t){"use strict";t.r(r);var o=t(1),a=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("虽然我们都知道有二十三种设计模式，但是大多停留在概念层面，真实开发中很少遇到。mybatis源码中使用了大量的设计模式，阅读源码并观察设计模式在其中的应用，能够更深入的理解设计模式。")]),e._v(" "),t("ol",[t("li",[e._v("Builder模式，例如SqlSessionFactoryBuilder、XMLConfigBuilder、XMLMapperBuilder、XMLStatementBuilder、CacheBuilder；")]),e._v(" "),t("li",[e._v("工厂模式，例如SqlSessionFactory、ObjectFactory、MapperProxyFactory；")]),e._v(" "),t("li",[e._v("单例模式，例如ErrorContext和LogFactory；")]),e._v(" "),t("li",[e._v("代理模式，Mybatis实现的核心，比如MapperProxy、ConnectionLogger，用的jdk的动态代理；还有executor.loader包使用了cglib或者javassist达到延迟加载的效果；")]),e._v(" "),t("li",[e._v("组合模式，例如SqlNode和各个子类"),t("code",[e._v("ChooseSqlNode")]),e._v("等；")]),e._v(" "),t("li",[e._v("模板方法模式，例如BaseExecutor和SimpleExecutor，还有"),t("code",[e._v("BaseTypeHandler")]),e._v("和所有的子类例如"),t("code",[e._v("IntegerTypeHandler")]),e._v("；")]),e._v(" "),t("li",[e._v("装饰者模式，例如Cache包中的"),t("code",[e._v("cache.decorators")]),e._v("子包中等各个装饰者的实现；")]),e._v(" "),t("li",[e._v("迭代器模式，例如迭代器模式"),t("code",[e._v("PropertyTokenizer")]),e._v("；")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/androidstarjack/article/details/121133873",target:"_blank",rel:"noopener noreferrer"}},[e._v("面试必问：Mybatis中9种经典的设计模式！你知道几个？"),t("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=a.exports}}]);