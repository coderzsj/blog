(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{701:function(t,e,v){"use strict";v.r(e);var a=v(1),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"vue-常见问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue-常见问题"}},[t._v("#")]),t._v(" vue 常见问题")]),t._v(" "),v("h2",{attrs:{id:"spa"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spa"}},[t._v("#")]),t._v(" SPA")]),t._v(" "),v("p",[t._v("单页应用")]),t._v(" "),v("p",[t._v("仅在 Web 页面初始化时加载相应的 HTML、JavaScript 和 CSS。")]),t._v(" "),v("p",[t._v("一旦页面加载完成，SPA 不会因为用户的操作而进行页面的重新加载或跳转，利用路由机制实现 HTML 内容的变换来代替，UI 与用户的交互，避免页面的重新加载。")]),t._v(" "),v("p",[t._v("用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染；\n基于上面一点，SPA 相对对服务器压力小；\n前后端职责分离，架构清晰，前端进行交互逻辑，后端负责数据处理；")]),t._v(" "),v("h3",{attrs:{id:"缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),v("p",[t._v("初次加载耗时多：为实现单页 Web 应用功能及显示效果，需要在加载页面的时候将 JavaScript、CSS 统一加载，部分页面按需加载；")]),t._v(" "),v("p",[t._v("用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染；")]),t._v(" "),v("h3",{attrs:{id:"v-show-与-v-if"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v-show-与-v-if"}},[t._v("#")]),t._v(" v-show 与 v-if")]),t._v(" "),v("p",[t._v("V-if 是真正的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建；也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。")]),t._v(" "),v("p",[t._v("V-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 的 “display” 属性进行切换。")]),t._v(" "),v("h3",{attrs:{id:"computed-和-watch"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#computed-和-watch"}},[t._v("#")]),t._v(" computed 和 watch")]),t._v(" "),v("p",[t._v("Computed： 是计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，下一次获取 computed 的值时才会重新计算 computed 的值；")]),t._v(" "),v("p",[t._v("Watch： 更多的是「观察」的作用，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作；")]),t._v(" "),v("h2",{attrs:{id:"vue-生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue-生命周期"}},[t._v("#")]),t._v(" Vue 生命周期")]),t._v(" "),v("p",[t._v("Vue 实例有一个完整的生命周期，也就是从开始创建、初始化数据、编译模版、挂载 Dom -> 渲染、更新 -> 渲染、卸载等一系列过程，我们称这是 Vue 的生命周期。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("生命周期")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("beforeCreate")]),t._v(" "),v("td",[t._v("组件实例被创建之初，组件的属性生效之前")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("created")]),t._v(" "),v("td",[t._v("组件实例已经完全创建，属性也绑定，但真实 dom 还没有生成，$el 还不可用")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("beforeMount")]),t._v(" "),v("td",[t._v("在挂载开始之前被调用：相关的 render 函数首次被调用")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("mounted")]),t._v(" "),v("td",[t._v("el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("beforeUpdate")]),t._v(" "),v("td",[t._v("组件数据更新之前调用，发生在虚拟 DOM 打补丁之前")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("update")]),t._v(" "),v("td",[t._v("组件数据更新之后")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("activited")]),t._v(" "),v("td",[t._v("keep-alive 专属，组件被激活时调用")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("deactivated")]),t._v(" "),v("td",[t._v("keep-alive 专属，组件被销毁时调用")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("beforeDestory")]),t._v(" "),v("td",[t._v("组件销毁前调用")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("destoryed")]),t._v(" "),v("td",[t._v("组件销毁后调用")])])])]),t._v(" "),v("h2",{attrs:{id:"哪个生命周期内调用异步请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#哪个生命周期内调用异步请求"}},[t._v("#")]),t._v(" 哪个生命周期内调用异步请求")]),t._v(" "),v("p",[t._v("可以在钩子函数 created、beforeMount、mounted 中进行调用，因为在这三个钩子函数中，data 已经创建，可以将服务端端返回的数据进行赋值。但是本人推荐在 created 钩子函数中调用异步请求，因为在 created 钩子函数中调用异步请求有以下优点")]),t._v(" "),v("p",[t._v("能更快获取到服务端数据，减少页面 loading 时间；\n服务端渲染不支持 beforeMount 、mounted 钩子函数，所以放在 created 中有助于一致性；")]),t._v(" "),v("h2",{attrs:{id:"在什么阶段才能访问操作-dom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#在什么阶段才能访问操作-dom"}},[t._v("#")]),t._v(" 在什么阶段才能访问操作 DOM")]),t._v(" "),v("p",[t._v("在钩子函数 mounted 被调用前，Vue 已经将编译好的模板挂载到页面上，所以在 mounted 中可以访问操作 DOM。V")]),t._v(" "),v("h2",{attrs:{id:"父子通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#父子通信"}},[t._v("#")]),t._v(" 父子通信")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("$emit props 触发父组件的事件")])]),t._v(" "),v("li",[v("p",[t._v("ref：如果在普通的 DOM 元素上使用，引用指向的就是 DOM 元素；如果用在子组件上，引用就指向组件实例")])]),t._v(" "),v("li",[v("p",[t._v("EventBus (emit /on) 适用于 父子、隔代、兄弟组件通信")])]),t._v(" "),v("li",[v("p",[t._v("Vuex 适用于 父子、隔代、兄弟组件通信")])]),t._v(" "),v("li",[v("p",[t._v("provide / inject 适用于 隔代组件通信")])])]),t._v(" "),v("p",[v("a",{attrs:{href:"https://www.jianshu.com/p/9f460e66ce01",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),v("OutboundLink")],1)]),t._v(" "),v("h2",{attrs:{id:"keep-alive"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[t._v("#")]),t._v(" keep-alive")]),t._v(" "),v("p",[t._v("Keep-alive 是 Vue 内置的一个组件，可以使被包含的组件保留状态，避免重新渲染 ，其有以下特性：")]),t._v(" "),v("p",[t._v("一般结合路由和动态组件一起使用，用于缓存组件；")]),t._v(" "),v("p",[t._v("提供 include 和 exclude 属性，两者都支持字符串或正则表达式， include 表示只有名称匹配的组件会被缓存，exclude 表示任何名称匹配的组件都不会被缓存 ，其中 exclude 的优先级比 include 高；")]),t._v(" "),v("p",[t._v("对应两个钩子函数 activated 和 deactivated ，当组件被激活时，触发钩子函数 activated，当组件被移除时，触发钩子函数 deactivated。")])])}),[],!1,null,null,null);e.default=_.exports}}]);